# Generated by Django 5.1.1 on 2025-04-15 17:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("profession", models.CharField(max_length=100)),
                ("bio", models.TextField()),
                ("experience_years", models.PositiveIntegerField()),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_count", models.PositiveIntegerField(default=0)),
                ("languages", models.JSONField(default=list)),
                ("specialties", models.JSONField(default=list)),
                ("social_media", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Author",
                "verbose_name_plural": "Authors",
                "ordering": ["-rating"],
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "booking_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("number_of_travelers", models.PositiveIntegerField()),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("special_requests", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Booking",
                "verbose_name_plural": "Bookings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=3, unique=True)),
                ("description", models.TextField()),
                ("capital", models.CharField(max_length=100)),
                ("language", models.CharField(max_length=100)),
                ("currency", models.CharField(max_length=100)),
                ("best_time_to_visit", models.CharField(max_length=100)),
                ("image", models.ImageField(upload_to="countries/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="agency_coun_name_2f1e9d_idx"),
                    models.Index(fields=["code"], name="agency_coun_code_fae624_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="EUR", max_length=3)),
                ("payment_method", models.CharField(max_length=50)),
                ("transaction_id", models.CharField(max_length=100, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="agency.booking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                ("preferences", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "confirmation_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_confirmed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_email_sent", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "indexes": [
                    models.Index(fields=["email"], name="agency_subs_email_be5cfc_idx"),
                    models.Index(
                        fields=["is_active"], name="agency_subs_is_acti_091ab9_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Traveler",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("date_of_birth", models.DateField()),
                (
                    "passport_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("passport_expiry", models.DateField(blank=True, null=True)),
                ("nationality", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travelers",
                        to="agency.booking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Traveler",
                "verbose_name_plural": "Travelers",
            },
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("description", models.TextField()),
                ("long_description", models.TextField()),
                ("destination", models.CharField(max_length=100)),
                ("duration", models.PositiveIntegerField(help_text="Duration in days")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base price per person",
                        max_digits=10,
                    ),
                ),
                ("group_size_min", models.PositiveIntegerField()),
                ("group_size_max", models.PositiveIntegerField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("challenging", "Challenging"),
                            ("difficult", "Difficult"),
                        ],
                        max_length=12,
                    ),
                ),
                ("featured", models.BooleanField(default=False)),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="agency.author",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip",
                "verbose_name_plural": "Trips",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unread", "Unread"),
                            ("read", "Read"),
                            ("replied", "Replied"),
                            ("archived", "Archived"),
                        ],
                        default="unread",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_messages",
                        to="agency.author",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_messages",
                        to="agency.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Message",
                "verbose_name_plural": "Contact Messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="trip",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookings",
                to="agency.trip",
            ),
        ),
        migrations.CreateModel(
            name="TripCountry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="agency.country"
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="agency.trip"
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Country",
                "verbose_name_plural": "Trip Countries",
            },
        ),
        migrations.AddField(
            model_name="trip",
            name="countries",
            field=models.ManyToManyField(
                related_name="trips", through="agency.TripCountry", to="agency.country"
            ),
        ),
        migrations.CreateModel(
            name="TripDate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("spots_total", models.PositiveIntegerField()),
                ("spots_booked", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trip_dates",
                        to="agency.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Date",
                "verbose_name_plural": "Trip Dates",
                "ordering": ["start_date"],
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="trip_date",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookings",
                to="agency.tripdate",
            ),
        ),
        migrations.CreateModel(
            name="TripImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image", models.ImageField(upload_to="trips/images/")),
                ("alt_text", models.CharField(max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="agency.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Image",
                "verbose_name_plural": "Trip Images",
                "ordering": ["display_order"],
            },
        ),
        migrations.CreateModel(
            name="TripInclusion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                (
                    "inclusion_type",
                    models.CharField(
                        choices=[
                            ("included", "Included"),
                            ("not_included", "Not Included"),
                        ],
                        max_length=12,
                    ),
                ),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inclusions",
                        to="agency.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Inclusion",
                "verbose_name_plural": "Trip Inclusions",
                "ordering": ["display_order"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        help_text="User profile picture",
                        null=True,
                        upload_to="users/avatars/",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("customer", "Customer"),
                            ("author", "Author"),
                        ],
                        default="customer",
                        max_length=10,
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user has verified their email address.",
                    ),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="agency_user_groups",
                        related_query_name="agency_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="agency_user_permissions",
                        related_query_name="agency_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("content", models.TextField()),
                ("trip_date", models.DateField()),
                ("is_verified", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="agency.trip",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="agency.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookings",
                to="agency.user",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="author_profile",
                to="agency.user",
            ),
        ),
        migrations.CreateModel(
            name="PopularDestination",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="destinations/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="popular_destinations",
                        to="agency.country",
                    ),
                ),
            ],
            options={
                "verbose_name": "Popular Destination",
                "verbose_name_plural": "Popular Destinations",
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("country", "name"),
                        name="unique_destination_per_country",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ItineraryDay",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("day_number", models.PositiveIntegerField()),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "accommodation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("meals", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itinerary_days",
                        to="agency.trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "Itinerary Day",
                "verbose_name_plural": "Itinerary Days",
                "ordering": ["day_number"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("trip", "day_number"), name="unique_day_per_trip"
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="tripcountry",
            constraint=models.UniqueConstraint(
                fields=("trip", "country"), name="unique_trip_country"
            ),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(fields=["title"], name="agency_trip_title_3e8c87_idx"),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(fields=["slug"], name="agency_trip_slug_126af8_idx"),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(fields=["price"], name="agency_trip_price_bc21f3_idx"),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["difficulty"], name="agency_trip_difficu_ff6b81_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(fields=["rating"], name="agency_trip_rating_42a51c_idx"),
        ),
        migrations.AddIndex(
            model_name="trip",
            index=models.Index(
                fields=["is_active"], name="agency_trip_is_acti_7e4fc0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tripdate",
            index=models.Index(
                fields=["start_date"], name="agency_trip_start_d_e6b8b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tripdate",
            index=models.Index(
                fields=["is_active"], name="agency_trip_is_acti_40d9eb_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="tripimage",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_primary", True)),
                fields=("trip",),
                name="unique_primary_image_per_trip",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="agency_user_email_1c6584_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="agency_user_usernam_ec0ce9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="agency_user_role_1059cd_idx"),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(
                fields=("email",), name="unique_user_email"
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(
                fields=("username",), name="unique_user_username"
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.UniqueConstraint(
                fields=("trip", "user"), name="unique_review_per_user_per_trip"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["booking_number"], name="agency_book_booking_d9845f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(fields=["status"], name="agency_book_status_f2b27e_idx"),
        ),
    ]
